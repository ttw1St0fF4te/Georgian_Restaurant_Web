{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/lib/api/config.ts"],"sourcesContent":["// API Configuration\nexport const API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:3000';\n\nexport const API_ENDPOINTS = {\n  // Health\n  health: '/health',\n  healthDb: '/health/db',\n  healthDbInfo: '/health/db/info',\n  \n  // Auth (будущие эндпоинты)\n  login: '/auth/login',\n  register: '/auth/register',\n  profile: '/auth/profile',\n  \n  // Restaurants\n  restaurants: '/restaurants',\n  restaurantsActive: '/restaurants/active',\n  \n  // Menu\n  menu: '/menu',\n  menuCategories: '/menu/categories',\n  menuItems: '/menu/items',\n  \n  // Tables\n  tables: '/tables',\n  tablesAvailable: '/tables/available',\n  \n  // Reservations\n  reservations: '/reservations',\n  reservationsUser: '/reservations/user',\n  \n  // Orders\n  orders: '/orders',\n  ordersUser: '/orders/user',\n  \n  // Audit\n  audit: '/audit',\n  auditRecent: '/audit/recent',\n  auditStatistics: '/audit/statistics',\n} as const;\n\nexport const HTTP_STATUS = {\n  OK: 200,\n  CREATED: 201,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500,\n} as const;"],"names":[],"mappings":"AAAA,oBAAoB;;;;;;;;;AACb,MAAM,eAAe,6DAAwC;AAE7D,MAAM,gBAAgB;IAC3B,SAAS;IACT,QAAQ;IACR,UAAU;IACV,cAAc;IAEd,2BAA2B;IAC3B,OAAO;IACP,UAAU;IACV,SAAS;IAET,cAAc;IACd,aAAa;IACb,mBAAmB;IAEnB,OAAO;IACP,MAAM;IACN,gBAAgB;IAChB,WAAW;IAEX,SAAS;IACT,QAAQ;IACR,iBAAiB;IAEjB,eAAe;IACf,cAAc;IACd,kBAAkB;IAElB,SAAS;IACT,QAAQ;IACR,YAAY;IAEZ,QAAQ;IACR,OAAO;IACP,aAAa;IACb,iBAAiB;AACnB;AAEO,MAAM,cAAc;IACzB,IAAI;IACJ,SAAS;IACT,aAAa;IACb,cAAc;IACd,WAAW;IACX,WAAW;IACX,uBAAuB;AACzB","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/lib/api/client.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { API_BASE_URL } from './config';\n\n// Создаем экземпляр axios с базовой конфигурацией\nexport const apiClient: AxiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Типы для API ответов\nexport interface ApiResponse<T = any> {\n  data: T;\n  message?: string;\n  status: number;\n}\n\nexport interface ApiError {\n  message: string;\n  status: number;\n  error?: string;\n}\n\n// Интерцептор запросов - добавляем JWT токен если есть\napiClient.interceptors.request.use(\n  (config) => {\n    // Получаем токен из localStorage (когда будет реализована авторизация)\n    if (typeof window !== 'undefined') {\n      const token = localStorage.getItem('auth_token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Интерцептор ответов - обработка ошибок\napiClient.interceptors.response.use(\n  (response: AxiosResponse) => {\n    return response;\n  },\n  (error) => {\n    const apiError: ApiError = {\n      message: error.response?.data?.message || error.message || 'Неизвестная ошибка',\n      status: error.response?.status || 500,\n      error: error.response?.data?.error,\n    };\n\n    // Если 401 - перенаправляем на логин (когда будет реализована авторизация)\n    if (error.response?.status === 401) {\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem('auth_token');\n        // router.push('/login'); - добавим позже\n      }\n    }\n\n    return Promise.reject(apiError);\n  }\n);\n\n// Вспомогательные функции для API запросов\nexport const api = {\n  get: <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> =>\n    apiClient.get(url, config).then((response) => response.data),\n    \n  post: <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\n    apiClient.post(url, data, config).then((response) => response.data),\n    \n  put: <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\n    apiClient.put(url, data, config).then((response) => response.data),\n    \n  patch: <T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\n    apiClient.patch(url, data, config).then((response) => response.data),\n    \n  delete: <T = any>(url: string, config?: AxiosRequestConfig): Promise<T> =>\n    apiClient.delete(url, config).then((response) => response.data),\n};"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAGO,MAAM,YAA2B,gJAAK,CAAC,MAAM,CAAC;IACnD,SAAS,2IAAY;IACrB,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAeA,uDAAuD;AACvD,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,CAAC;IACC,uEAAuE;IACvE;;IAMA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,yCAAyC;AACzC,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,MAAM,WAAqB;QACzB,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW,MAAM,OAAO,IAAI;QAC3D,QAAQ,MAAM,QAAQ,EAAE,UAAU;QAClC,OAAO,MAAM,QAAQ,EAAE,MAAM;IAC/B;IAEA,2EAA2E;IAC3E,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QAClC;;IAIF;IAEA,OAAO,QAAQ,MAAM,CAAC;AACxB;AAIK,MAAM,MAAM;IACjB,KAAK,CAAU,KAAa,SAC1B,UAAU,GAAG,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAa,SAAS,IAAI;IAE7D,MAAM,CAAU,KAAa,MAAY,SACvC,UAAU,IAAI,CAAC,KAAK,MAAM,QAAQ,IAAI,CAAC,CAAC,WAAa,SAAS,IAAI;IAEpE,KAAK,CAAU,KAAa,MAAY,SACtC,UAAU,GAAG,CAAC,KAAK,MAAM,QAAQ,IAAI,CAAC,CAAC,WAAa,SAAS,IAAI;IAEnE,OAAO,CAAU,KAAa,MAAY,SACxC,UAAU,KAAK,CAAC,KAAK,MAAM,QAAQ,IAAI,CAAC,CAAC,WAAa,SAAS,IAAI;IAErE,QAAQ,CAAU,KAAa,SAC7B,UAAU,MAAM,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAa,SAAS,IAAI;AAClE","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/lib/api/services/health.ts"],"sourcesContent":["import { api } from '../client';\nimport { API_ENDPOINTS } from '../config';\nimport { HealthStatus, DatabaseHealth, DatabaseInfo } from '../types';\n\n// Health API service\nexport const healthApi = {\n  // Проверка работоспособности API\n  getHealth: (): Promise<HealthStatus> => \n    api.get(API_ENDPOINTS.health),\n\n  // Проверка подключения к базе данных\n  getDatabaseHealth: (): Promise<DatabaseHealth> => \n    api.get(API_ENDPOINTS.healthDb),\n\n  // Подробная информация о базе данных\n  getDatabaseInfo: (): Promise<DatabaseInfo> => \n    api.get(API_ENDPOINTS.healthDbInfo),\n};"],"names":[],"mappings":";;;;AAAA;AACA;;;AAIO,MAAM,YAAY;IACvB,iCAAiC;IACjC,WAAW,IACT,kIAAG,CAAC,GAAG,CAAC,4IAAa,CAAC,MAAM;IAE9B,qCAAqC;IACrC,mBAAmB,IACjB,kIAAG,CAAC,GAAG,CAAC,4IAAa,CAAC,QAAQ;IAEhC,qCAAqC;IACrC,iBAAiB,IACf,kIAAG,CAAC,GAAG,CAAC,4IAAa,CAAC,YAAY;AACtC","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/lib/api/services/audit.ts"],"sourcesContent":["import { api } from '../client';\nimport { API_ENDPOINTS } from '../config';\nimport { AuditLog, AuditOperation } from '../types';\n\n// Audit API service\nexport const auditApi = {\n  // Получить записи аудита с фильтрацией\n  getAuditLogs: (params?: {\n    table?: string;\n    operation?: AuditOperation;\n    user?: string;\n    recordId?: string;\n    limit?: number;\n  }): Promise<AuditLog[]> => \n    api.get(API_ENDPOINTS.audit, { params }),\n\n  // Получить последние записи аудита\n  getRecentAuditLogs: (limit: number = 50): Promise<AuditLog[]> => \n    api.get(`${API_ENDPOINTS.auditRecent}?limit=${limit}`),\n\n  // Получить статистику аудита\n  getAuditStatistics: (): Promise<{\n    operationStats: any[];\n    tableStats: any[];\n  }> => \n    api.get(API_ENDPOINTS.auditStatistics),\n\n  // Получить историю изменений записи\n  getRecordHistory: (tableName: string, recordId: string): Promise<AuditLog[]> => \n    api.get(`${API_ENDPOINTS.audit}/history?table=${tableName}&recordId=${recordId}`),\n\n  // Получить изменения за последние дни\n  getRecentChanges: (days: number = 7): Promise<AuditLog[]> => \n    api.get(`${API_ENDPOINTS.audit}/recent-changes?days=${days}`),\n\n  // Получить активность пользователя\n  getUserActivity: (username: string, limit: number = 50): Promise<AuditLog[]> => \n    api.get(`${API_ENDPOINTS.audit}/user-activity?username=${username}&limit=${limit}`),\n};"],"names":[],"mappings":";;;;AAAA;AACA;;;AAIO,MAAM,WAAW;IACtB,uCAAuC;IACvC,cAAc,CAAC,SAOb,kIAAG,CAAC,GAAG,CAAC,4IAAa,CAAC,KAAK,EAAE;YAAE;QAAO;IAExC,mCAAmC;IACnC,oBAAoB,CAAC,QAAgB,EAAE,GACrC,kIAAG,CAAC,GAAG,CAAC,GAAG,4IAAa,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO;IAEvD,6BAA6B;IAC7B,oBAAoB,IAIlB,kIAAG,CAAC,GAAG,CAAC,4IAAa,CAAC,eAAe;IAEvC,oCAAoC;IACpC,kBAAkB,CAAC,WAAmB,WACpC,kIAAG,CAAC,GAAG,CAAC,GAAG,4IAAa,CAAC,KAAK,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,UAAU;IAElF,sCAAsC;IACtC,kBAAkB,CAAC,OAAe,CAAC,GACjC,kIAAG,CAAC,GAAG,CAAC,GAAG,4IAAa,CAAC,KAAK,CAAC,qBAAqB,EAAE,MAAM;IAE9D,mCAAmC;IACnC,iBAAiB,CAAC,UAAkB,QAAgB,EAAE,GACpD,kIAAG,CAAC,GAAG,CAAC,GAAG,4IAAa,CAAC,KAAK,CAAC,wBAAwB,EAAE,SAAS,OAAO,EAAE,OAAO;AACtF","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/lib/api/services/index.ts"],"sourcesContent":["// Экспорт всех API сервисов\nexport { healthApi } from './health';\nexport { auditApi } from './audit';\n\n// Здесь будем добавлять новые сервисы по мере разработки API:\n// export { authApi } from './auth';\n// export { restaurantsApi } from './restaurants';\n// export { menuApi } from './menu';\n// export { tablesApi } from './tables';\n// export { reservationsApi } from './reservations';\n// export { ordersApi } from './orders';"],"names":[],"mappings":"AAAA,4BAA4B;;AAC5B;AACA,wOAEA,8DAA8D;CAC9D,oCAAoC;CACpC,kDAAkD;CAClD,oCAAoC;CACpC,wCAAwC;CACxC,oDAAoD;CACpD,wCAAwC","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/lib/hooks/useHealth.ts"],"sourcesContent":["import { useQuery, UseQueryResult } from '@tanstack/react-query';\nimport { healthApi } from '../api/services';\nimport { HealthStatus, DatabaseHealth, DatabaseInfo } from '../api/types';\n\n// Query keys для health API\nexport const healthQueryKeys = {\n  all: ['health'] as const,\n  health: () => [...healthQueryKeys.all, 'status'] as const,\n  database: () => [...healthQueryKeys.all, 'database'] as const,\n  databaseInfo: () => [...healthQueryKeys.all, 'database', 'info'] as const,\n};\n\n// Хук для проверки работоспособности API\nexport const useHealth = (): UseQueryResult<HealthStatus, Error> => {\n  return useQuery({\n    queryKey: healthQueryKeys.health(),\n    queryFn: healthApi.getHealth,\n    refetchInterval: 30000, // Проверяем каждые 30 секунд\n  });\n};\n\n// Хук для проверки подключения к базе данных\nexport const useDatabaseHealth = (): UseQueryResult<DatabaseHealth, Error> => {\n  return useQuery({\n    queryKey: healthQueryKeys.database(),\n    queryFn: healthApi.getDatabaseHealth,\n    refetchInterval: 60000, // Проверяем каждую минуту\n  });\n};\n\n// Хук для получения информации о базе данных\nexport const useDatabaseInfo = (): UseQueryResult<DatabaseInfo, Error> => {\n  return useQuery({\n    queryKey: healthQueryKeys.databaseInfo(),\n    queryFn: healthApi.getDatabaseInfo,\n    staleTime: 5 * 60 * 1000, // 5 минут\n  });\n};"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAAA;;;AAIO,MAAM,kBAAkB;IAC7B,KAAK;QAAC;KAAS;IACf,QAAQ,IAAM;eAAI,gBAAgB,GAAG;YAAE;SAAS;IAChD,UAAU,IAAM;eAAI,gBAAgB,GAAG;YAAE;SAAW;IACpD,cAAc,IAAM;eAAI,gBAAgB,GAAG;YAAE;YAAY;SAAO;AAClE;AAGO,MAAM,YAAY;IACvB,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,gBAAgB,MAAM;QAChC,SAAS,oJAAS,CAAC,SAAS;QAC5B,iBAAiB;IACnB;AACF;AAGO,MAAM,oBAAoB;IAC/B,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,gBAAgB,QAAQ;QAClC,SAAS,oJAAS,CAAC,iBAAiB;QACpC,iBAAiB;IACnB;AACF;AAGO,MAAM,kBAAkB;IAC7B,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,gBAAgB,YAAY;QACtC,SAAS,oJAAS,CAAC,eAAe;QAClC,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/lib/hooks/useAudit.ts"],"sourcesContent":["import { useQuery, UseQueryResult } from '@tanstack/react-query';\nimport { auditApi } from '../api/services';\nimport { AuditLog, AuditOperation } from '../api/types';\n\n// Query keys для audit API\nexport const auditQueryKeys = {\n  all: ['audit'] as const,\n  logs: (filters?: object) => [...auditQueryKeys.all, 'logs', filters] as const,\n  recent: (limit: number) => [...auditQueryKeys.all, 'recent', limit] as const,\n  statistics: () => [...auditQueryKeys.all, 'statistics'] as const,\n  history: (table: string, recordId: string) => \n    [...auditQueryKeys.all, 'history', table, recordId] as const,\n  changes: (days: number) => [...auditQueryKeys.all, 'changes', days] as const,\n  userActivity: (username: string, limit: number) => \n    [...auditQueryKeys.all, 'user-activity', username, limit] as const,\n};\n\n// Хук для получения записей аудита с фильтрацией\nexport const useAuditLogs = (params?: {\n  table?: string;\n  operation?: AuditOperation;\n  user?: string;\n  recordId?: string;\n  limit?: number;\n}): UseQueryResult<AuditLog[], Error> => {\n  return useQuery({\n    queryKey: auditQueryKeys.logs(params),\n    queryFn: () => auditApi.getAuditLogs(params),\n    staleTime: 30000, // 30 секунд\n  });\n};\n\n// Хук для получения последних записей аудита\nexport const useRecentAuditLogs = (limit: number = 50): UseQueryResult<AuditLog[], Error> => {\n  return useQuery({\n    queryKey: auditQueryKeys.recent(limit),\n    queryFn: () => auditApi.getRecentAuditLogs(limit),\n    refetchInterval: 60000, // Обновляем каждую минуту\n  });\n};\n\n// Хук для получения статистики аудита\nexport const useAuditStatistics = (): UseQueryResult<{\n  operationStats: any[];\n  tableStats: any[];\n}, Error> => {\n  return useQuery({\n    queryKey: auditQueryKeys.statistics(),\n    queryFn: auditApi.getAuditStatistics,\n    staleTime: 5 * 60 * 1000, // 5 минут\n  });\n};\n\n// Хук для получения истории изменений записи\nexport const useRecordHistory = (\n  tableName: string, \n  recordId: string,\n  enabled: boolean = true\n): UseQueryResult<AuditLog[], Error> => {\n  return useQuery({\n    queryKey: auditQueryKeys.history(tableName, recordId),\n    queryFn: () => auditApi.getRecordHistory(tableName, recordId),\n    enabled: enabled && !!tableName && !!recordId,\n    staleTime: 2 * 60 * 1000, // 2 минуты\n  });\n};\n\n// Хук для получения изменений за последние дни\nexport const useRecentChanges = (days: number = 7): UseQueryResult<AuditLog[], Error> => {\n  return useQuery({\n    queryKey: auditQueryKeys.changes(days),\n    queryFn: () => auditApi.getRecentChanges(days),\n    staleTime: 60000, // 1 минута\n  });\n};\n\n// Хук для получения активности пользователя\nexport const useUserActivity = (\n  username: string, \n  limit: number = 50,\n  enabled: boolean = true\n): UseQueryResult<AuditLog[], Error> => {\n  return useQuery({\n    queryKey: auditQueryKeys.userActivity(username, limit),\n    queryFn: () => auditApi.getUserActivity(username, limit),\n    enabled: enabled && !!username,\n    staleTime: 2 * 60 * 1000, // 2 минуты\n  });\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAAA;;;AAIO,MAAM,iBAAiB;IAC5B,KAAK;QAAC;KAAQ;IACd,MAAM,CAAC,UAAqB;eAAI,eAAe,GAAG;YAAE;YAAQ;SAAQ;IACpE,QAAQ,CAAC,QAAkB;eAAI,eAAe,GAAG;YAAE;YAAU;SAAM;IACnE,YAAY,IAAM;eAAI,eAAe,GAAG;YAAE;SAAa;IACvD,SAAS,CAAC,OAAe,WACvB;eAAI,eAAe,GAAG;YAAE;YAAW;YAAO;SAAS;IACrD,SAAS,CAAC,OAAiB;eAAI,eAAe,GAAG;YAAE;YAAW;SAAK;IACnE,cAAc,CAAC,UAAkB,QAC/B;eAAI,eAAe,GAAG;YAAE;YAAiB;YAAU;SAAM;AAC7D;AAGO,MAAM,eAAe,CAAC;IAO3B,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,eAAe,IAAI,CAAC;QAC9B,SAAS,IAAM,kJAAQ,CAAC,YAAY,CAAC;QACrC,WAAW;IACb;AACF;AAGO,MAAM,qBAAqB,CAAC,QAAgB,EAAE;IACnD,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,eAAe,MAAM,CAAC;QAChC,SAAS,IAAM,kJAAQ,CAAC,kBAAkB,CAAC;QAC3C,iBAAiB;IACnB;AACF;AAGO,MAAM,qBAAqB;IAIhC,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,eAAe,UAAU;QACnC,SAAS,kJAAQ,CAAC,kBAAkB;QACpC,WAAW,IAAI,KAAK;IACtB;AACF;AAGO,MAAM,mBAAmB,CAC9B,WACA,UACA,UAAmB,IAAI;IAEvB,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,eAAe,OAAO,CAAC,WAAW;QAC5C,SAAS,IAAM,kJAAQ,CAAC,gBAAgB,CAAC,WAAW;QACpD,SAAS,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC;QACrC,WAAW,IAAI,KAAK;IACtB;AACF;AAGO,MAAM,mBAAmB,CAAC,OAAe,CAAC;IAC/C,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,eAAe,OAAO,CAAC;QACjC,SAAS,IAAM,kJAAQ,CAAC,gBAAgB,CAAC;QACzC,WAAW;IACb;AACF;AAGO,MAAM,kBAAkB,CAC7B,UACA,QAAgB,EAAE,EAClB,UAAmB,IAAI;IAEvB,OAAO,IAAA,uLAAQ,EAAC;QACd,UAAU,eAAe,YAAY,CAAC,UAAU;QAChD,SAAS,IAAM,kJAAQ,CAAC,eAAe,CAAC,UAAU;QAClD,SAAS,WAAW,CAAC,CAAC;QACtB,WAAW,IAAI,KAAK;IACtB;AACF","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { Box, Typography, Card, CardContent, Chip, Grid, CircularProgress } from '@mui/material';\nimport { useHealth, useDatabaseHealth, useDatabaseInfo } from '../lib/hooks/useHealth';\nimport { useRecentAuditLogs } from '../lib/hooks/useAudit';\n\nexport default function ApiTestPage() {\n  const { data: health, isLoading: healthLoading, error: healthError } = useHealth();\n  const { data: dbHealth, isLoading: dbLoading, error: dbError } = useDatabaseHealth();\n  const { data: dbInfo, isLoading: dbInfoLoading, error: dbInfoError } = useDatabaseInfo();\n  const { data: auditLogs, isLoading: auditLoading, error: auditError } = useRecentAuditLogs(5);\n\n  const StatusChip = ({ status, loading }: { status?: string; loading: boolean }) => {\n    if (loading) return <CircularProgress size={20} />;\n    if (status === 'OK') return <Chip label=\"OK\" color=\"success\" />;\n    return <Chip label=\"ERROR\" color=\"error\" />;\n  };\n\n  return (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom>\n        🇬🇪 Georgian Restaurant API Test\n      </Typography>\n      \n      <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom>\n        Тестирование подключения к API грузинского ресторана\n      </Typography>\n\n      <Grid container spacing={3} sx={{ mt: 2 }}>\n        {/* API Health Status */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                🔍 API Health Status\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                <Typography>Статус:</Typography>\n                <StatusChip status={health?.status} loading={healthLoading} />\n              </Box>\n              {health && (\n                <Box>\n                  <Typography variant=\"body2\">Service: {health.service}</Typography>\n                  <Typography variant=\"body2\">Time: {new Date(health.timestamp).toLocaleString()}</Typography>\n                </Box>\n              )}\n              {healthError && (\n                <Typography color=\"error\" variant=\"body2\">\n                  Ошибка: {(healthError as any).message}\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Database Health */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                🗄️ Database Health\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                <Typography>Подключение:</Typography>\n                <StatusChip status={dbHealth?.status} loading={dbLoading} />\n              </Box>\n              {dbHealth && (\n                <Box>\n                  <Typography variant=\"body2\">Database: {dbHealth.database}</Typography>\n                  <Typography variant=\"body2\">Connected: {dbHealth.connected ? 'Да' : 'Нет'}</Typography>\n                </Box>\n              )}\n              {dbError && (\n                <Typography color=\"error\" variant=\"body2\">\n                  Ошибка: {(dbError as any).message}\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Database Info */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                📊 Database Info\n              </Typography>\n              {dbInfoLoading && <CircularProgress />}\n              {dbInfo && (\n                <Box>\n                  <Typography variant=\"body2\">Version: {dbInfo.version?.split(' ').slice(0, 2).join(' ')}</Typography>\n                  <Typography variant=\"body2\">Database: {dbInfo.database}</Typography>\n                  <Typography variant=\"body2\">User: {dbInfo.user}</Typography>\n                  <Typography variant=\"body2\">Status: {dbInfo.connection_status}</Typography>\n                </Box>\n              )}\n              {dbInfoError && (\n                <Typography color=\"error\" variant=\"body2\">\n                  Ошибка: {(dbInfoError as any).message}\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Recent Audit Logs */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                📋 Recent Audit Logs (5 latest)\n              </Typography>\n              {auditLoading && <CircularProgress />}\n              {auditLogs && auditLogs.length > 0 ? (\n                <Box>\n                  {auditLogs.slice(0, 5).map((log) => (\n                    <Box key={log.audit_id} sx={{ mb: 1, p: 1, bgcolor: 'grey.50', borderRadius: 1 }}>\n                      <Typography variant=\"body2\">\n                        <strong>{log.operation}</strong> в {log.table_name}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {new Date(log.changed_at).toLocaleString()} - {log.changed_by}\n                      </Typography>\n                    </Box>\n                  ))}\n                </Box>\n              ) : auditLogs?.length === 0 ? (\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Нет записей аудита\n                </Typography>\n              ) : null}\n              {auditError && (\n                <Typography color=\"error\" variant=\"body2\">\n                  Ошибка: {(auditError as any).message}\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      <Box sx={{ mt: 4, p: 3, bgcolor: 'primary.main', color: 'white', borderRadius: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          ✅ Готово для разработки!\n        </Typography>\n        <Typography variant=\"body2\">\n          Веб-приложение успешно подключено к Georgian Restaurant API. \n          Теперь можно начинать параллельную разработку функционала.\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}