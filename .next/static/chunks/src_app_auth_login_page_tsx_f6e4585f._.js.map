{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/app/auth/login/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Container,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Alert,\n  Link as MuiLink,\n  CircularProgress,\n} from '@mui/material';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { useAuth } from '@/lib/auth-context';\n\nconst LoginPage: React.FC = () => {\n  const router = useRouter();\n  const { login, isAuthenticated, isLoading: authLoading } = useAuth();\n  \n  const [formData, setFormData] = useState({\n    usernameOrEmail: '',\n    password: '',\n  });\n  \n  const [errors, setErrors] = useState<string[]>([]);\n  const [fieldErrors, setFieldErrors] = useState<{[key: string]: string}>({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Редирект если уже авторизован (только после завершения загрузки)\n  React.useEffect(() => {\n    if (!authLoading && isAuthenticated) {\n      router.push('/');\n    }\n  }, [authLoading, isAuthenticated, router]);\n\n  const handleInputChange = (field: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setFormData(prev => ({\n      ...prev,\n      [field]: value,\n    }));\n    \n    // Валидация конкретного поля\n    validateField(field, value);\n    \n    // Очищаем общие ошибки при вводе\n    if (errors.length > 0) {\n      setErrors([]);\n    }\n  };\n\n  const validateField = (field: string, value: string) => {\n    let fieldError = '';\n\n    switch (field) {\n      case 'usernameOrEmail':\n        if (!value.trim()) {\n          fieldError = 'Введите email или имя пользователя';\n        }\n        break;\n      \n      case 'password':\n        if (!value) {\n          fieldError = 'Введите пароль';\n        }\n        break;\n    }\n\n    setFieldErrors(prev => ({\n      ...prev,\n      [field]: fieldError\n    }));\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    \n    // Валидация\n    const newErrors: string[] = [];\n    if (!formData.usernameOrEmail.trim()) {\n      newErrors.push('Введите имя пользователя или email');\n    }\n    if (!formData.password.trim()) {\n      newErrors.push('Введите пароль');\n    }\n\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors([]);\n\n    try {\n      await login(formData.usernameOrEmail, formData.password);\n      // Успешный вход - редирект на главную страницу\n      router.push('/');\n    } catch (error: any) {\n      // Логируем ошибку только в режиме разработки\n      if (process.env.NODE_ENV === 'development') {\n        console.error('Login error:', error);\n      }\n      \n      // Используем сообщение об ошибке напрямую из AuthService\n      if (error.message) {\n        setErrors([error.message]);\n      } else {\n        setErrors(['Произошла ошибка при входе. Попробуйте снова.']);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 8, mb: 4 }}>\n      <Paper elevation={3} sx={{ p: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\" color=\"primary\">\n          Вход в систему\n        </Typography>\n        \n        <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mb: 3 }}>\n          Войдите в свой аккаунт для доступа к персональным функциям\n        </Typography>\n\n        {errors.length > 0 && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {errors.map((error, index) => (\n              <Typography key={index} variant=\"body2\">\n                {error}\n              </Typography>\n            ))}\n          </Alert>\n        )}\n\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"usernameOrEmail\"\n            label=\"Имя пользователя или Email\"\n            name=\"usernameOrEmail\"\n            autoComplete=\"username\"\n            autoFocus\n            value={formData.usernameOrEmail}\n            onChange={handleInputChange('usernameOrEmail')}\n            disabled={isLoading}\n            placeholder=\"Введите имя пользователя или email\"\n            error={!!fieldErrors.usernameOrEmail}\n            helperText={fieldErrors.usernameOrEmail}\n          />\n          \n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Пароль\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={formData.password}\n            onChange={handleInputChange('password')}\n            disabled={isLoading}\n            placeholder=\"Введите пароль\"\n            error={!!fieldErrors.password}\n            helperText={fieldErrors.password}\n          />\n          \n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, py: 1.5 }}\n            disabled={isLoading}\n            startIcon={isLoading ? <CircularProgress size={20} color=\"inherit\" /> : undefined}\n          >\n            {isLoading ? 'Вход...' : 'Войти'}\n          </Button>\n          \n          <Box textAlign=\"center\" sx={{ mt: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Нет аккаунта?{' '}\n              <Link href=\"/auth/register\" passHref>\n                <MuiLink component=\"span\" sx={{ cursor: 'pointer' }}>\n                  Зарегистрироваться\n                </MuiLink>\n              </Link>\n            </Typography>\n          </Box>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default LoginPage;"],"names":[],"mappings":"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","debugId":null}}]
}