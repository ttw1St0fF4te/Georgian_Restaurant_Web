{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/lib/providers/query-provider.tsx"],"sourcesContent":["'use client';\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { useState } from 'react';\n\nexport default function QueryProvider({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            staleTime: 60 * 1000, // 1 минута\n            refetchOnWindowFocus: false,\n            retry: (failureCount, error: any) => {\n              // Не повторяем запросы для 4xx ошибок\n              if (error?.status >= 400 && error?.status < 500) {\n                return false;\n              }\n              return failureCount < 3;\n            },\n          },\n          mutations: {\n            retry: false,\n          },\n        },\n      })\n  );\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      {process.env.NODE_ENV === 'development' && <ReactQueryDevtools />}\n    </QueryClientProvider>\n  );\n}"],"names":[],"mappings":";;;;AAgCO;;AA9BP;AAAA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,cAAc,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;;IACpC,MAAM,CAAC,YAAY,GAAG,IAAA,yKAAQ;kCAC5B,IACE,IAAI,+LAAW,CAAC;gBACd,gBAAgB;oBACd,SAAS;wBACP,WAAW,KAAK;wBAChB,sBAAsB;wBACtB,KAAK;sDAAE,CAAC,cAAc;gCACpB,sCAAsC;gCACtC,IAAI,CAAA,kBAAA,4BAAA,MAAO,MAAM,KAAI,OAAO,CAAA,kBAAA,4BAAA,MAAO,MAAM,IAAG,KAAK;oCAC/C,OAAO;gCACT;gCACA,OAAO,eAAe;4BACxB;;oBACF;oBACA,WAAW;wBACT,OAAO;oBACT;gBACF;YACF;;IAGJ,qBACE,6LAAC,gNAAmB;QAAC,QAAQ;;YAC1B;YACA,oDAAyB,+BAAiB,6LAAC,6MAAkB;;;;;;;;;;;AAGpE;GA7BwB;KAAA","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/keluch/Desktop/coledj/4year/coursework2/georgian_restaurant_web/src/lib/providers/mui-provider.tsx"],"sourcesContent":["'use client';\n\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nconst theme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n});\n\nexport default function MuiThemeProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AAHA;;;;AAKA,MAAM,QAAQ,IAAA,6NAAW,EAAC;IACxB,SAAS;QACP,MAAM;QACN,SAAS;YACP,MAAM;QACR;QACA,WAAW;YACT,MAAM;QACR;IACF;AACF;AAEe,SAAS,iBAAiB,KAIxC;QAJwC,EACvC,QAAQ,EAGT,GAJwC;IAKvC,qBACE,6LAAC,mOAAa;QAAC,OAAO;;0BACpB,6LAAC,oLAAW;;;;;YACX;;;;;;;AAGP;KAXwB","debugId":null}}]
}